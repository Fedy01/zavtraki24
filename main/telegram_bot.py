import os
import sys
import django
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes
from asgiref.sync import sync_to_async

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'zavtraki24.settings')
django.setup()

from main.models import MenuItem

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –ù–∞–ø–∏—à–∏ /menu, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –º–µ–Ω—é.")

# –ö–æ–º–∞–Ω–¥–∞ /menu
async def menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –º–µ–Ω—é —á–µ—Ä–µ–∑ sync_to_async
    items = await sync_to_async(list)(MenuItem.objects.all())

    if not items:
        await update.message.reply_text("–ú–µ–Ω—é –ø–æ–∫–∞ –ø—É—Å—Ç–æ–µ üò¢")
        return

    message = "üçΩ –ú–µ–Ω—é:\n\n"
    for item in items:
        message += f"‚Ä¢ {item.name} ‚Äî {item.price} BYN\n{item.description}\n\n"

    await update.message.reply_text(message)

if __name__ == "__main__":
    TOKEN = "8412427341:AAH1BR1cAxHrUXt9W_qsIqPuxue-bXrXLdg"

    app = ApplicationBuilder().token(TOKEN).build()

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("menu", menu))

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()
